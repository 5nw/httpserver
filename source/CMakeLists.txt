cmake_minimum_required(VERSION 3.5)
project(httpserver)
#add_definitions(-DLOGGING)
set(SOURCES_HTTP http/httpparser.cpp http/httprequest.cpp http/httpresponse.cpp http/httpnotfoundresponse.cpp http/httpokresponse.cpp http/common.cpp)
set(SOURCES_NETWORK network/common.cpp network/httpserver.cpp network/tcpclientsocket.cpp network/tcpserver.cpp network/tcpserversocket.cpp network/tcpclientsocketlist.cpp network/tcpsocket.cpp)
IF(WIN32)
    set(SOURCES_NETWORK ${SOURCES_NETWORK} network/wsa.cpp)
ENDIF()
set(SOURCES_THREADS threads/threadpool.cpp)
set(SOURCES_UTILS utils/datetime.cpp utils/exception.cpp utils/filesystem.cpp utils/logger.cpp utils/strings.cpp utils/charset.cpp utils/stringset.cpp utils/funclogger.cpp utils/timer.cpp utils/fileinfo.cpp utils/dirinfo.cpp)
set(SOURCES ${SOURCES_HTTP} ${SOURCES_NETWORK} ${SOURCES_THREADS} ${SOURCES_UTILS} options.cpp main.cpp)
include_directories(.)
add_definitions(-std=c++11)
add_executable(httpserver ${SOURCES})
IF(WIN32)
    target_link_libraries(httpserver ws2_32)
ELSEIF(UNIX)
    target_link_libraries(httpserver pthread)
ENDIF()
